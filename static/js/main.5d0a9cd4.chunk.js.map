{"version":3,"sources":["components/Banner.js","components/TextArea.js","actions/index.js","actions/types.js","components/BlogList.js","components/App.js","reducers/index.js","reducers/BlogReducer.js","index.js"],"names":["Banner","props","react_default","a","createElement","className","heading","tagline","TextArea","onFormSubmit","formValues","_this","createBlog","title","blogBody","renderInput","_ref","input","Object","assign","autoComplete","renderTextArea","_ref2","onSubmit","this","handleSubmit","Field","name","component","React","Component","WrappedForm","reduxForm","form","connect","body","type","payload","BlogList","onDeleteClick","e","deleteBlog","target","dataset","renderBlogs","blogs","map","blog","key","onClick","data-title","data-body","state","App","components_Banner","src_components_TextArea","components_BlogList","combineReducers","arguments","length","undefined","action","concat","toConsumableArray","filter","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.5d0a9cd4.chunk.js","sourcesContent":["/* This component will any part of the website with\r\n  => Heading\r\n  => BannerLine/TagLine\r\n*/\r\n\r\nimport React from \"react\";\r\n\r\nconst Banner = props => {\r\n  return (\r\n    <div className=\"ui center aligned container\">\r\n      <h2>{props.heading}</h2>\r\n      <p>{props.tagline}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","/* Component for TextArea */\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { createBlog } from \"../actions\";\r\nimport \"./TextArea.css\";\r\n\r\nclass TextArea extends React.Component {\r\n  // Function to handle the invoking of createBlog action creator with the formValues\r\n  onFormSubmit = formValues => {\r\n    this.props.createBlog(formValues.title, formValues.blogBody);\r\n  };\r\n\r\n  // Helper function to render input tag\r\n  renderInput = ({ input }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        <label>What's the title?</label>\r\n        <input {...input} autoComplete=\"off\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Helper function to render text area tag\r\n  renderTextArea = ({ input }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        <label>Type it out!</label>\r\n        <textarea {...input} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(this.onFormSubmit)}\r\n        className=\"ui form text-area\"\r\n      >\r\n        <Field name=\"title\" component={this.renderInput} />\r\n        <Field name=\"blogBody\" component={this.renderTextArea} />\r\n        <button className=\"ui black button\">Blog It!</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// Wrapper for redux form\r\nconst WrappedForm = reduxForm({\r\n  form: \"createBlog\"\r\n})(TextArea);\r\n\r\n// Connect component in order to access the mapped state to props in current component\r\n// And to hook up the blog creation action creator to the component\r\nexport default connect(\r\n  null,\r\n  { createBlog }\r\n)(WrappedForm);\r\n","import { CREATE_BLOG, DELETE_BLOG } from \"./types\";\r\n\r\n// Blog creation action creator\r\n// Arguments: Blog title, Blog body\r\n// Payload : Blog object\r\nexport const createBlog = (title, body) => {\r\n  return {\r\n    type: CREATE_BLOG,\r\n    payload: {\r\n      title,\r\n      body\r\n    }\r\n  };\r\n};\r\n\r\n// Action creator to delete a blog\r\nexport const deleteBlog = (title, body) => {\r\n  return {\r\n    type: DELETE_BLOG,\r\n    payload: {\r\n      title,\r\n      body\r\n    }\r\n  };\r\n};\r\n","export const CREATE_BLOG = \"CREATE_BLOG\";\r\nexport const DELETE_BLOG = \"DELETE_BLOG\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteBlog } from \"../actions\";\r\n\r\nclass BlogList extends React.Component {\r\n  // Delete blog post handler\r\n  onDeleteClick = e => {\r\n    // Call delete action creator\r\n    // We are fetching the title and body from the data attributes on the delete button\r\n    this.props.deleteBlog(e.target.dataset.title, e.target.dataset.body);\r\n  };\r\n\r\n  renderBlogs = () => {\r\n    return this.props.blogs.map(blog => {\r\n      return (\r\n        <div key={blog.title} className=\"item\">\r\n          <div className=\"content\">\r\n            <div className=\"header\">{blog.title}</div>\r\n            <div className=\"description\">{blog.body}</div>\r\n          </div>\r\n          <button\r\n            className=\"ui right floated red button\"\r\n            onClick={this.onDeleteClick}\r\n            data-title={blog.title}\r\n            data-body={blog.body}\r\n          >\r\n            Delete Blog\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderBlogs()}</div>;\r\n  }\r\n}\r\n\r\n// Mapping state to props\r\nconst mapStateToProps = state => {\r\n  return { blogs: state.blogs };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteBlog }\r\n)(BlogList);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Banner from \"./Banner\";\r\nimport TextArea from \"./TextArea\";\r\nimport BlogList from \"./BlogList\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Banner\r\n          heading=\"Blog It\"\r\n          tagline=\"“Blogging is a conversation, not a code.”\"\r\n        />\r\n        <div className=\"ui container\">\r\n          <TextArea />\r\n        </div>\r\n        <div className=\"list-heading\">\r\n          <Banner\r\n            heading=\"Your Blogs\"\r\n            tagline=\"“If you want to continually grow your blog, you need to learn to blog on a consistent basis.”\"\r\n          />\r\n        </div>\r\n        <div className=\"ui container blog-list\">\r\n          <BlogList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport BlogReducer from \"./BlogReducer\";\r\n\r\n// Temporary reducer just for scaffolding\r\nexport default combineReducers({\r\n  blogs: BlogReducer,\r\n  form: formReducer\r\n});\r\n","import { CREATE_BLOG } from \"../actions/types\";\r\nimport { DELETE_BLOG } from \"../actions/types\";\r\n\r\n// Blog creation reducer\r\n// Recieves current state and action\r\n// Can return new state (add a new blog to the list of blogs in the redux store) or\r\n// Return the state as it is\r\n// Initial state = Empty list of blogs\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case CREATE_BLOG:\r\n      return [...state, action.payload];\r\n    case DELETE_BLOG:\r\n      return state.filter(\r\n        blog =>\r\n          blog.title !== action.payload.title ||\r\n          blog.body !== action.payload.body\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\n// Creating the redux store\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware()));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}> \r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}